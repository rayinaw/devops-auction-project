# Deploy to Azure Kubernetes Service

trigger:
- main

resources:
- repo: self

variables:
  dockerRegistryServiceConnection: 'ContainerRegistryServiceConnection'
  imageRepository: 'demoproject'
  containerRegistry: 'qtmccr.azurecr.io'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'arcade72978b55-auth'
  vmImageName: 'ubuntu-latest'
  servicesChangedWebApp: $[ ne(variables['Build.SourceBranchName'], 'refs/heads/main') ]
  servicesChangedAuction: $[ ne(variables['Build.SourceBranchName'], 'refs/heads/main') ]
  servicesChangedSearch: $[ ne(variables['Build.SourceBranchName'], 'refs/heads/main') ]
  servicesChangedIdentity: $[ eq(variables['Build.SourceBranchName'], 'refs/heads/main') ]
  servicesChangedGateway: $[ ne(variables['Build.SourceBranchName'], 'refs/heads/main') ]
  dockerRepositoryWebApp: 'web-app'
  dockerRepositoryAuction: 'auction-svc'
  dockerRepositorySearch: 'search-svc'
  dockerRepositoryIdentity: 'identity-svc'
  dockerRepositoryGateway: 'gateway-svc'



stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: 'Build and push front end web app image'
      inputs:
        command: 'buildAndPush'
        containerRegistry: $(dockerRegistryServiceConnection)
        repository: 'web-app'
        buildContext: .
        Dockerfile: 'frontend/web-app/Dockerfile'
        tags: |
          $(tag)
    - task: Docker@2
      displayName: 'Build and push auction service image'
      inputs:
        command: 'buildAndPush'
        containerRegistry: $(dockerRegistryServiceConnection)
        repository: 'auction-svc'
        buildContext: .
        Dockerfile: 'src/AuctionService/Dockerfile'
        tags: |
          $(tag)
    - task: Docker@2
      displayName: 'Build and push search service image'
      inputs:
        command: 'buildAndPush'
        containerRegistry: $(dockerRegistryServiceConnection)
        repository: 'search-svc'
        buildContext: .
        Dockerfile: 'src/SearchService/Dockerfile'
        tags: |
          $(tag)
    - task: Docker@2
      displayName: 'Build and push identity service image'
      inputs:
        command: 'buildAndPush'
        containerRegistry: $(dockerRegistryServiceConnection)
        repository: 'identity-svc'
        buildContext: .
        Dockerfile: 'src/IdentityService/Dockerfile'
        tags: |
          $(tag)
    - task: Docker@2
      displayName: 'Build and push gateway-svc image'
      inputs:
        command: 'buildAndPush'
        containerRegistry: $(dockerRegistryServiceConnection)
        repository: 'gateway-svc'
        buildContext: .
        Dockerfile: 'src/GatewayService/Dockerfile'
        tags: |
          $(tag)
    - upload: manifests
      artifact: manifests

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'kube-environment'
    strategy:
      runOnce:
        deploy:
          steps:
          # - task: KubernetesManifest@0
          #   displayName: Create imagePullSecret
          #   inputs:
          #     action: createSecret
          #     secretName: $(imagePullSecret)
          #     dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
          - script: |

              sed -i "s|{{DOCKER_IMAGE_VERSION}}|$(tag)|g" $(Pipeline.Workspace)/manifests/K8S/auction-depl.yml
              sed -i "s|{{DOCKER_IMAGE_VERSION}}|$(tag)|g" $(Pipeline.Workspace)/manifests/K8S/gateway-depl.yml
              sed -i "s|{{DOCKER_IMAGE_VERSION}}|$(tag)|g" $(Pipeline.Workspace)/manifests/K8S/search-depl.yml
              sed -i "s|{{DOCKER_IMAGE_VERSION}}|$(tag)|g" $(Pipeline.Workspace)/manifests/K8S/identity-depl.yml
              sed -i "s|{{DOCKER_IMAGE_VERSION}}|$(tag)|g" $(Pipeline.Workspace)/manifests/K8S/webapp-depl.yml
              sed -i "s|CONTAINER_REGISTRY|$(containerRegistry)|g" $(Pipeline.Workspace)/manifests/K8S/auction-depl.yml
              sed -i "s|CONTAINER_REGISTRY|$(containerRegistry)|g" $(Pipeline.Workspace)/manifests/K8S/gateway-depl.yml
              sed -i "s|CONTAINER_REGISTRY|$(containerRegistry)|g" $(Pipeline.Workspace)/manifests/K8S/search-depl.yml
              sed -i "s|CONTAINER_REGISTRY|$(containerRegistry)|g" $(Pipeline.Workspace)/manifests/K8S/identity-depl.yml
              sed -i "s|CONTAINER_REGISTRY|$(containerRegistry)|g" $(Pipeline.Workspace)/manifests/K8S/webapp-depl.yml
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              connectionType: 'kubernetesServiceConnection'
              kubernetesServiceConnection: 'kubernetes connection'
              action: deploy
              manifests: |
                $(Pipeline.Workspace)/manifests/K8S/local-pvc.yml
                $(Pipeline.Workspace)/manifests/K8S/postgres-depl.yml
                $(Pipeline.Workspace)/manifests/K8S/mongo-depl.yml
                $(Pipeline.Workspace)/manifests/K8S/auction-depl.yml
                $(Pipeline.Workspace)/manifests/K8S/gateway-depl.yml
                $(Pipeline.Workspace)/manifests/K8S/search-depl.yml
                $(Pipeline.Workspace)/manifests/K8S/identity-depl.yml
                $(Pipeline.Workspace)/manifests/K8S/webapp-depl.yml
                $(Pipeline.Workspace)/manifests/service.yml
                $(Pipeline.Workspace)/manifests/prod-k8s/ingress-svc.yml

